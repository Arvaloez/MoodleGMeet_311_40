{"version":3,"file":"mod_form.min.js","sources":["../src/mod_form.js"],"sourcesContent":["define([\n  'core/notification',\n  'core/str',\n  'mod_googlemeet/gapi'\n], function(notification, str, gapi) { // gapi\n  return {\n    init: function(clientId, apiKey, userTimeZone) {\n\n      // GSI variables\n      let tokenClient;\n      let gapiInited = false;\n      let gisInited = false;\n\n      // Array of API discovery doc URLs for APIs used by the quickstart\n      var discoveryDocs = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n\n      // Authorization scopes required by the API\n      var scope = 'https://www.googleapis.com/auth/calendar.events';\n\n      // Load strings\n      var requiredfield = '';\n      var strcheckweekdays = '';\n      var invalideventendtime = '';\n      var invalideventenddate = '';\n      var timeahead = '';\n      str.get_strings([\n        {key: 'requirednamefield', component: 'mod_googlemeet'},\n        {key: 'checkweekdays', component: 'mod_googlemeet'},\n        {key: 'invalideventendtime', component: 'mod_googlemeet'},\n        {key: 'invalideventenddate', component: 'mod_googlemeet'},\n        {key: 'timeahead', component: 'mod_googlemeet'},\n      ]).done(function(strs) {\n        requiredfield = strs[0];\n        strcheckweekdays = strs[1];\n        invalideventendtime = strs[2];\n        invalideventenddate = strs[3];\n        timeahead = strs[4];\n      }).fail(notification.exception);\n\n      // Elements references\n      var generateUrlRoomButton = document.getElementById('id_generateurlroom');\n      var urlFieldHidden = document.getElementById('id_url');\n      var urlViewerField = document.getElementById('id_url_viewer');\n      var originalNameFieldHidden = document.getElementById('id_originalname');\n      var creatorEmailFieldHidden = document.getElementById('id_creatoremail');\n      var form = document.querySelector('#region-main .mform');\n\n      /**\n       * Returns date formatted in yyyy-mm-dd format\n       *\n       * @param {string} name name of date filed in formdata\n       * @param {boolean} format if it is to return the formatted date\n       * @return {string} The formatted date\n       */\n      function getDateString(name, format) {\n        var formData = new FormData(form);\n        var year = formData.get(name + '[year]');\n        var month = formData.get(name + '[month]');\n        var day = formData.get(name + '[day]');\n\n        month = ('0' + month).slice(-2);\n        day = ('0' + day).slice(-2);\n\n        if (format) {\n          return year + '-' + month + '-' + day;\n        }\n\n        return year + month + day;\n      }\n\n      /**\n       * Checks whether the selected day of the week exists within the start and end dates\n       * @return {boolean}\n       */\n      function checkweekdays() {\n        var formData = new FormData(form);\n\n        var starthour = formData.get('starthour');\n        var startminute = formData.get('startminute');\n        var endhour = formData.get('endhour');\n        var endminute = formData.get('endminute');\n\n        starthour = ('0' + starthour).slice(-2);\n        startminute = ('0' + startminute).slice(-2);\n        endhour = ('0' + endhour).slice(-2);\n        endminute = ('0' + endminute).slice(-2);\n\n        var starttime = starthour + ':' + startminute + ':00';\n        var endtime = endhour + ':' + endminute + ':00';\n\n        var eventdate = getDateString('eventdate', true) + ' ' + starttime;\n        var eventenddate = getDateString('eventenddate', true) + ' ' + endtime;\n\n        var daysofweek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n        var start = new Date(eventdate);\n        var end = new Date(eventenddate);\n\n        var found = false;\n        while (start <= end) {\n          if (!found) {\n            for (var i = 0; i <= daysofweek.length; i++) {\n              var currentday = daysofweek[start.getDay()];\n              var formday = formData.get('days[' + daysofweek[i] + ']');\n              if (formday && currentday === daysofweek[i]) {\n                found = true;\n                break;\n              }\n            }\n          }\n          start = new Date(start.setDate(start.getDate() + 1));\n        }\n\n        return found;\n      }\n\n      /**\n       * Validates form data\n       * @return {boolean}\n       */\n      function validate() {\n        var valid = true;\n        var formData = new FormData(form);\n\n        // The name is required\n        var nameInput = document.getElementById('id_name');\n        var nameError = document.getElementById('id_error_name');\n        if (formData.get('name').trim().length === 0) {\n          nameInput.classList.add('is-invalid');\n          nameInput.focus();\n          nameError.innerText = '- ' + requiredfield;\n          nameError.style.display = \"block\";\n          return false;\n        } else {\n          nameInput.classList.remove('is-invalid');\n          nameError.innerText = '';\n          nameError.style.display = \"none\";\n        }\n\n        // The end time cannot be less than the start time\n        var eventTimeError = document.getElementById('id_googlemeet_eventtime_error');\n        var starttime = formData.get('starthour') * 3600 + formData.get('startminute') * 60;\n        var endtime = formData.get('endhour') * 3600 + formData.get('endminute') * 60;\n        if (endtime < starttime) {\n          eventTimeError.innerText = invalideventendtime;\n          eventTimeError.style.display = \"block\";\n          document.getElementById('id_endhour').focus();\n          return false;\n        } else {\n          eventTimeError.innerText = '';\n          eventTimeError.style.display = \"none\";\n        }\n\n        // The end date cannot be less than the start date\n        var eventdate = Math.floor(new Date(getDateString('eventdate', true)).getTime() / 1000);\n        var eventenddate = Math.floor(new Date(getDateString('eventenddate', true)).getTime() / 1000);\n        var eventenddateerror = document.getElementById('id_googlemeet_eventenddategroup_error');\n        if (\n            formData.get('addmultiply') &&\n            eventdate !== 0 &&\n            eventenddate !== 0 &&\n            eventenddate < eventdate\n        ) {\n          eventenddateerror.innerText = invalideventenddate;\n          eventenddateerror.style.display = \"block\";\n          document.getElementById('id_eventenddate_day').focus();\n          return false;\n        } else if (\n            // The event period cannot be longer than one year\n            formData.get('addmultiply') &&\n            Math.ceil((eventenddate - eventdate) / 31536000) > 1\n        ) {\n          eventenddateerror.innerText = timeahead;\n          eventenddateerror.style.display = \"block\";\n          document.getElementById('id_eventenddate_day').focus();\n          return false;\n        } else {\n          eventenddateerror.innerText = '';\n          eventenddateerror.style.display = \"none\";\n        }\n\n        // The days of the week must fall within the date range of the event.\n        if (formData.get('addmultiply')) {\n          var dayserror = document.getElementById('id_googlemeet_days_error');\n          if (!checkweekdays()) {\n            dayserror.innerText = strcheckweekdays;\n            dayserror.style.display = \"block\";\n            document.getElementById('id_days_Mon').focus();\n            return false;\n          } else {\n            dayserror.innerText = '';\n            dayserror.style.display = \"none\";\n          }\n        }\n\n        return valid;\n      }\n\n      /**\n       * Callback after api.js is loaded.\n       */\n      function gapiLoaded() {\n        gapi.load('client', initializeGapiClient);\n      }\n\n      /**\n       * Callback after the API client is loaded. Loads the\n       * discovery doc to initialize the API.\n       */\n      async function initializeGapiClient() {\n        await gapi.client.init({\n          apiKey: apiKey,\n          discoveryDocs: discoveryDocs,\n        });\n        gapiInited = true;\n        maybeEnableButtons();\n      }\n\n      /**\n       * Callback after Google Identity Services are loaded.\n       */\n      function gisLoaded() {\n        tokenClient = google.accounts.oauth2.initTokenClient({\n          client_id: clientId,\n          scope: scope,\n          callback: '', // defined later\n        });\n        gisInited = true;\n        maybeEnableButtons();\n      }\n\n      /**\n       * Enables user interaction after all libraries are loaded.\n       */\n      function maybeEnableButtons() {\n        if (gapiInited && gisInited) {\n          generateUrlRoomButton.onclick = handleAuthClick;\n          generateUrlRoomButton.disabled = false;\n          return;\n        }\n      }\n\n      /**\n       *  Sign in the user upon button click.\n       */\n      function handleAuthClick() {\n        tokenClient.callback = async (resp) => {\n          if (resp.error !== undefined) {\n            throw (resp);\n          }\n          handleCreateEvent();\n          return;\n        };\n\n        if (gapi.client.getToken() === null) {\n          // Prompt the user to select a Google Account and ask for consent to share their data\n          // when establishing a new session.\n          tokenClient.requestAccessToken({prompt: 'consent'});\n        } else {\n          // Skip display of account chooser and consent dialog for an existing session.\n          tokenClient.requestAccessToken({prompt: ''});\n        }\n      }\n\n      /**\n       * Initializes the creation of the event in Google Calendar\n       */\n      function handleCreateEvent() {\n        hidePre();\n\n        if (!validate()) {\n          return;\n        }\n        createEvent();\n        return;\n      }\n\n      /**\n       * Displays loading\n       *\n       * @param {boolean} show if it is to show loading\n       */\n      function showLoading(show) {\n        var generateurlroomLoading = document.getElementById('generateurlroomLoading');\n\n        if (show) {\n          generateurlroomLoading.style.display = \"block\";\n          generateUrlRoomButton.disabled = true;\n        } else {\n          generateurlroomLoading.style.display = \"none\";\n          generateUrlRoomButton.disabled = false;\n        }\n      }\n\n      /**\n       * Concatenates with name a random number\n       *\n       * @param {string} name\n       * @return {string} The formatted name\n       */\n      function formatName(name) {\n        var random = (Math.floor(Math.random() * (9999 - 1111)) + 1111);\n        return name + ' (' + random + ')';\n      }\n\n      /**\n       * Append a pre-element to the body that contains the message\n       * provided as its text node. Used to display API call errors.\n       *\n       * @param {string} message Text to be placed in pre element.\n       */\n      function appendPre(message) {\n        var pre = document.getElementById('googlemeetcontentlog');\n        var textContent = document.createTextNode(message + '\\n');\n        pre.style.display = \"block\";\n        pre.appendChild(textContent);\n      }\n\n      /**\n       * Hide the pre tag\n       */\n      function hidePre() {\n        var pre = document.getElementById('googlemeetcontentlog');\n        pre.style.display = \"none\";\n        pre.innerHTML = \"\";\n      }\n\n      /**\n       * Creates the event on Google Calendar\n       */\n      function createEvent() {\n        var formData = new FormData(form);\n\n        var starthour = formData.get('starthour');\n        var startminute = formData.get('startminute');\n        var endhour = formData.get('endhour');\n        var endminute = formData.get('endminute');\n\n        starthour = ('0' + starthour).slice(-2);\n        startminute = ('0' + startminute).slice(-2);\n        endhour = ('0' + endhour).slice(-2);\n        endminute = ('0' + endminute).slice(-2);\n\n        var eventstarttime = starthour + ':' + startminute + ':00';\n        var eventendtime = endhour + ':' + endminute + ':00';\n\n        var start = {\n          dateTime: getDateString('eventdate', true) + 'T' + eventstarttime,\n          timeZone: userTimeZone\n        };\n\n        var end = {\n          dateTime: getDateString('eventdate', true) + 'T' + eventendtime,\n          timeZone: userTimeZone\n        };\n\n        var recurrence = [];\n\n        if (formData.get('addmultiply')) {\n          var interval = 'INTERVAL=' + formData.get('period');\n          var until = 'UNTIL=' + getDateString('eventenddate', false) + 'T235959Z';\n          var byday = 'BYDAY=';\n\n          var daysofweek = {\n            Sun: 'SU',\n            Mon: 'MO',\n            Tue: 'TU',\n            Wed: 'WE',\n            Thu: 'TH',\n            Fri: 'FR',\n            Sat: 'SA'\n          };\n\n          for (var day in daysofweek) {\n            if (formData.get('days[' + day + ']')) {\n              byday += daysofweek[day] + ',';\n            }\n          }\n\n          recurrence = [\n            'RRULE:FREQ=WEEKLY;' + interval + ';' + until + ';' + byday\n          ];\n        }\n\n        var name = formatName(formData.get('name'));\n        var eventResource = {\n          summary: name,\n          description: formData.get('introeditor[text]'),\n          start: start,\n          end: end,\n          recurrence: recurrence\n        };\n\n        showLoading(true);\n\n        gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': eventResource\n        }).then(function(response) {\n          var event = response.result;\n\n          var eventPatch = {\n            conferenceData: {\n              createRequest: {requestId: event.id}\n            }\n          };\n\n          gapi.client.calendar.events.patch({\n            calendarId: \"primary\",\n            eventId: event.id,\n            resource: eventPatch,\n            sendNotifications: false,\n            conferenceDataVersion: 1\n          }).then(function(response) {\n            var event = response.result;\n\n            generateUrlRoomButton.remove();\n            originalNameFieldHidden.value = name;\n            urlFieldHidden.value = event.hangoutLink;\n            urlViewerField.value = event.hangoutLink;\n            creatorEmailFieldHidden.value = event.creator.email;\n\n            document.getElementById('id_googlemeet_generateurlgroup_error').style.display = 'none';\n\n            showLoading(false);\n            return;\n          }).catch(function(error) {\n            appendPre(JSON.stringify(error.result.error, null, 2));\n            showLoading(false);\n          });\n          return;\n        }).catch(function(error) {\n          appendPre(JSON.stringify(error.result.error, null, 2));\n          showLoading(false);\n        });\n      }\n\n      /**\n       *  On load, called to load the auth2 library and API client library.\n       */\n      gapiLoaded();\n      gisLoaded();\n    }\n  };\n});\n"],"names":["define","notification","str","gapi","init","clientId","apiKey","userTimeZone","tokenClient","gapiInited","gisInited","discoveryDocs","requiredfield","strcheckweekdays","invalideventendtime","invalideventenddate","timeahead","get_strings","key","component","done","strs","fail","exception","generateUrlRoomButton","document","getElementById","urlFieldHidden","urlViewerField","originalNameFieldHidden","creatorEmailFieldHidden","form","querySelector","getDateString","name","format","formData","FormData","year","get","month","day","slice","validate","nameInput","nameError","trim","length","classList","add","focus","innerText","style","display","remove","eventTimeError","starttime","eventdate","Math","floor","Date","getTime","eventenddate","eventenddateerror","ceil","dayserror","starthour","startminute","endhour","endminute","endtime","daysofweek","start","end","found","i","currentday","getDay","setDate","getDate","checkweekdays","initializeGapiClient","client","maybeEnableButtons","onclick","handleAuthClick","disabled","callback","resp","undefined","error","handleCreateEvent","getToken","requestAccessToken","prompt","pre","innerHTML","eventstarttime","eventendtime","dateTime","timeZone","recurrence","interval","until","byday","Sun","Mon","Tue","Wed","Thu","Fri","Sat","random","formatName","eventResource","summary","description","showLoading","calendar","events","insert","then","response","event","result","eventPatch","conferenceData","createRequest","requestId","id","patch","calendarId","eventId","resource","sendNotifications","conferenceDataVersion","value","hangoutLink","creator","email","catch","appendPre","JSON","stringify","createEvent","show","generateurlroomLoading","message","textContent","createTextNode","appendChild","load","google","accounts","oauth2","initTokenClient","client_id","scope"],"mappings":"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"}